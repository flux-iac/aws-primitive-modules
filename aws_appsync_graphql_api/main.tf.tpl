######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_appsync_graphql_api
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

provider "aws" {
}

variable "values" {
  type = any object({
    additional_authentication_provider = optional(list({
        authentication_type = optional(string)
        openid_connect_config = optional(list({
            auth_ttl = optional(number)
            client_id = optional(string)
            iat_ttl = optional(number)
            issuer = optional(string)
        }))
        user_pool_config = optional(list({
            app_id_client_regex = optional(string)
            aws_region = optional(string)
            user_pool_id = optional(string)
        }))
        lambda_authorizer_config = optional(list({
            authorizer_result_ttl_in_seconds = optional(number)
            authorizer_uri = optional(string)
            identity_validation_expression = optional(string)
        }))
    }))
    authentication_type = optional(string)
    lambda_authorizer_config = optional(list({
        authorizer_uri = optional(string)
        identity_validation_expression = optional(string)
        authorizer_result_ttl_in_seconds = optional(number)
    }))
    log_config = optional(list({
        cloudwatch_logs_role_arn = optional(string)
        field_log_level = optional(string)
        exclude_verbose_content = optional(bool)
    }))
    name = optional(string)
    openid_connect_config = optional(list({
        client_id = optional(string)
        iat_ttl = optional(number)
        issuer = optional(string)
        auth_ttl = optional(number)
    }))
    schema = optional(string)
    tags = optional(map(string))
    user_pool_config = optional(list({
        aws_region = optional(string)
        default_action = optional(string)
        user_pool_id = optional(string)
        app_id_client_regex = optional(string)
    }))
    xray_enabled = optional(bool)
  })
}

resource "aws_appsync_graphql_api" "this" {

  {{- if $.Values.additional_authentication_provider }}
  additional_authentication_provider = var.values.additional_authentication_provider
  {{- end }}
  {{- if $.Values.authentication_type }}
  authentication_type = var.values.authentication_type
  {{- end }}
  {{- if $.Values.lambda_authorizer_config }}
  lambda_authorizer_config = var.values.lambda_authorizer_config
  {{- end }}
  {{- if $.Values.log_config }}
  log_config = var.values.log_config
  {{- end }}
  {{- if $.Values.name }}
  name = var.values.name
  {{- end }}
  {{- if $.Values.openid_connect_config }}
  openid_connect_config = var.values.openid_connect_config
  {{- end }}
  {{- if $.Values.schema }}
  schema = var.values.schema
  {{- end }}
  {{- if $.Values.tags }}
  tags = var.values.tags
  {{- end }}
  {{- if $.Values.user_pool_config }}
  user_pool_config = var.values.user_pool_config
  {{- end }}
  {{- if $.Values.xray_enabled }}
  xray_enabled = var.values.xray_enabled
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_appsync_graphql_api.this.arn
}

