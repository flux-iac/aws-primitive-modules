######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_appmesh_gateway_route
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

variable "values" {
  type = object({
    mesh_name = optional(string)
    mesh_owner = optional(string)
    name = optional(string)
    spec = optional(list(object({
        grpc_route = optional(list(object({
            action = optional(list(object({
                target = optional(list(object({
                    virtual_service = optional(list(object({
                        virtual_service_name = optional(string)
                    })))
                })))
            })))
            match = optional(list(object({
                service_name = optional(string)
            })))
        })))
        http2_route = optional(list(object({
            action = optional(list(object({
                target = optional(list(object({
                    virtual_service = optional(list(object({
                        virtual_service_name = optional(string)
                    })))
                })))
                rewrite = optional(list(object({
                    hostname = optional(list(object({
                        default_target_hostname = optional(string)
                    })))
                    prefix = optional(list(object({
                        default_prefix = optional(string)
                        value = optional(string)
                    })))
                })))
            })))
            match = optional(list(object({
                hostname = optional(list(object({
                    exact = optional(string)
                    suffix = optional(string)
                })))
                prefix = optional(string)
            })))
        })))
        http_route = optional(list(object({
            match = optional(list(object({
                prefix = optional(string)
                hostname = optional(list(object({
                    exact = optional(string)
                    suffix = optional(string)
                })))
            })))
            action = optional(list(object({
                target = optional(list(object({
                    virtual_service = optional(list(object({
                        virtual_service_name = optional(string)
                    })))
                })))
                rewrite = optional(list(object({
                    hostname = optional(list(object({
                        default_target_hostname = optional(string)
                    })))
                    prefix = optional(list(object({
                        default_prefix = optional(string)
                        value = optional(string)
                    })))
                })))
            })))
        })))
    })))
    tags = optional(map(string))
    virtual_gateway_name = optional(string)
  })
}

resource "aws_appmesh_gateway_route" "this" {

  {{- if $.Values.mesh_name }}
  mesh_name = var.values.mesh_name
  {{- end }}
  {{- if $.Values.mesh_owner }}
  mesh_owner = var.values.mesh_owner
  {{- end }}
  {{- if $.Values.name }}
  name = var.values.name
  {{- end }}
  {{- if $.Values.spec }}
  dynamic "spec" {
    for_each = var.values.spec[*]
    content {
      dynamic "http_route" {
        for_each = spec.value.http_route[*]
        content {
          dynamic "match" {
            for_each = http_route.value.match[*]
            content {
              prefix = match.value.prefix
              dynamic "hostname" {
                for_each = match.value.hostname[*]
                content {
                  exact = hostname.value.exact
                  suffix = hostname.value.suffix
                }
              }
            }
          }
          dynamic "action" {
            for_each = http_route.value.action[*]
            content {
              dynamic "target" {
                for_each = action.value.target[*]
                content {
                  dynamic "virtual_service" {
                    for_each = target.value.virtual_service[*]
                    content {
                      virtual_service_name = virtual_service.value.virtual_service_name
                    }
                  }
                }
              }
              dynamic "rewrite" {
                for_each = action.value.rewrite[*]
                content {
                  dynamic "hostname" {
                    for_each = rewrite.value.hostname[*]
                    content {
                      default_target_hostname = hostname.value.default_target_hostname
                    }
                  }
                  dynamic "prefix" {
                    for_each = rewrite.value.prefix[*]
                    content {
                      default_prefix = prefix.value.default_prefix
                      value = prefix.value.value
                    }
                  }
                }
              }
            }
          }
        }
      }
      dynamic "grpc_route" {
        for_each = spec.value.grpc_route[*]
        content {
          dynamic "action" {
            for_each = grpc_route.value.action[*]
            content {
              dynamic "target" {
                for_each = action.value.target[*]
                content {
                  dynamic "virtual_service" {
                    for_each = target.value.virtual_service[*]
                    content {
                      virtual_service_name = virtual_service.value.virtual_service_name
                    }
                  }
                }
              }
            }
          }
          dynamic "match" {
            for_each = grpc_route.value.match[*]
            content {
              service_name = match.value.service_name
            }
          }
        }
      }
      dynamic "http2_route" {
        for_each = spec.value.http2_route[*]
        content {
          dynamic "action" {
            for_each = http2_route.value.action[*]
            content {
              dynamic "target" {
                for_each = action.value.target[*]
                content {
                  dynamic "virtual_service" {
                    for_each = target.value.virtual_service[*]
                    content {
                      virtual_service_name = virtual_service.value.virtual_service_name
                    }
                  }
                }
              }
              dynamic "rewrite" {
                for_each = action.value.rewrite[*]
                content {
                  dynamic "hostname" {
                    for_each = rewrite.value.hostname[*]
                    content {
                      default_target_hostname = hostname.value.default_target_hostname
                    }
                  }
                  dynamic "prefix" {
                    for_each = rewrite.value.prefix[*]
                    content {
                      default_prefix = prefix.value.default_prefix
                      value = prefix.value.value
                    }
                  }
                }
              }
            }
          }
          dynamic "match" {
            for_each = http2_route.value.match[*]
            content {
              prefix = match.value.prefix
              dynamic "hostname" {
                for_each = match.value.hostname[*]
                content {
                  exact = hostname.value.exact
                  suffix = hostname.value.suffix
                }
              }
            }
          }
        }
      }
    }
  }
  {{- end }}
  {{- if $.Values.tags }}
  tags = var.values.tags
  {{- end }}
  {{- if $.Values.virtual_gateway_name }}
  virtual_gateway_name = var.values.virtual_gateway_name
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_appmesh_gateway_route.this.arn
}

output "created_date" {
    value = aws_appmesh_gateway_route.this.created_date
}

output "last_updated_date" {
    value = aws_appmesh_gateway_route.this.last_updated_date
}

output "mesh_owner" {
    value = aws_appmesh_gateway_route.this.mesh_owner
}

output "resource_owner" {
    value = aws_appmesh_gateway_route.this.resource_owner
}

