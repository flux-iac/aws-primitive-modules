######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_ecs_cluster
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

provider "aws" {
}

variable "values" {
  type = object({
    configuration = optional(list(object({
        execute_command_configuration = optional(list(object({
            kms_key_id = optional(string)
            log_configuration = optional(list(object({
                cloud_watch_encryption_enabled = optional(bool)
                cloud_watch_log_group_name = optional(string)
                s3_bucket_name = optional(string)
                s3_bucket_encryption_enabled = optional(bool)
                s3_key_prefix = optional(string)
            })))
            logging = optional(string)
        })))
    })))
    name = optional(string)
    tags = optional(map(string))
  })
}

resource "aws_ecs_cluster" "this" {

  {{- if $.Values.configuration }}
  dynamic "configuration" {
    for_each = var.values.configuration[*]
    content {
      dynamic "execute_command_configuration" {
        for_each = configuration.value.execute_command_configuration[*]
        content {
          kms_key_id = execute_command_configuration.value.kms_key_id
          dynamic "log_configuration" {
            for_each = execute_command_configuration.value.log_configuration[*]
            content {
              cloud_watch_encryption_enabled = log_configuration.value.cloud_watch_encryption_enabled
              cloud_watch_log_group_name = log_configuration.value.cloud_watch_log_group_name
              s3_bucket_name = log_configuration.value.s3_bucket_name
              s3_bucket_encryption_enabled = log_configuration.value.s3_bucket_encryption_enabled
              s3_key_prefix = log_configuration.value.s3_key_prefix
            }
          }
          logging = execute_command_configuration.value.logging
        }
      }
    }
  }
  {{- end }}
  {{- if $.Values.name }}
  name = var.values.name
  {{- end }}
  {{- if $.Values.tags }}
  tags = var.values.tags
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_ecs_cluster.this.arn
}

