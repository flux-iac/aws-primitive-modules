######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_lb_listener_rule
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

variable "values" {
  type = object({
    action = optional(list(object({
        order = optional(number)
        target_group_arn = optional(string)
        forward = optional(list(object({
            stickiness = optional(list(object({
                enabled = optional(bool)
                duration = optional(number)
            })))
            target_group = optional(set(object({
                weight = optional(number)
                arn = optional(string)
            })))
        })))
        redirect = optional(list(object({
            status_code = optional(string)
            host = optional(string)
            path = optional(string)
            port = optional(string)
            protocol = optional(string)
            query = optional(string)
        })))
        fixed_response = optional(list(object({
            content_type = optional(string)
            message_body = optional(string)
            status_code = optional(string)
        })))
        authenticate_cognito = optional(list(object({
            session_timeout = optional(number)
            user_pool_arn = optional(string)
            user_pool_client_id = optional(string)
            user_pool_domain = optional(string)
            authentication_request_extra_params = optional(map(string))
            on_unauthenticated_request = optional(string)
            scope = optional(string)
            session_cookie_name = optional(string)
        })))
        authenticate_oidc = optional(list(object({
            client_secret = optional(string)
            issuer = optional(string)
            session_timeout = optional(number)
            token_endpoint = optional(string)
            user_info_endpoint = optional(string)
            authentication_request_extra_params = optional(map(string))
            authorization_endpoint = optional(string)
            client_id = optional(string)
            on_unauthenticated_request = optional(string)
            scope = optional(string)
            session_cookie_name = optional(string)
        })))
        type = optional(string)
    })))
    condition = optional(set(object({
        host_header = optional(list(object({
            values = optional(set(string))
        })))
        http_header = optional(list(object({
            http_header_name = optional(string)
            values = optional(set(string))
        })))
        http_request_method = optional(list(object({
            values = optional(set(string))
        })))
        path_pattern = optional(list(object({
            values = optional(set(string))
        })))
        query_string = optional(set(object({
            value = optional(string)
            key = optional(string)
        })))
        source_ip = optional(list(object({
            values = optional(set(string))
        })))
    })))
    listener_arn = optional(string)
    tags = optional(map(string))
  })
}

resource "aws_lb_listener_rule" "this" {

  {{- if $.Values.action }}
  dynamic "action" {
    for_each = var.values.action[*]
    content {
      target_group_arn = action.value.target_group_arn
      dynamic "forward" {
        for_each = action.value.forward[*]
        content {
          dynamic "target_group" {
            for_each = forward.value.target_group[*]
            content {
              arn = target_group.value.arn
              weight = target_group.value.weight
            }
          }
          dynamic "stickiness" {
            for_each = forward.value.stickiness[*]
            content {
              duration = stickiness.value.duration
              enabled = stickiness.value.enabled
            }
          }
        }
      }
      dynamic "redirect" {
        for_each = action.value.redirect[*]
        content {
          host = redirect.value.host
          path = redirect.value.path
          port = redirect.value.port
          protocol = redirect.value.protocol
          query = redirect.value.query
          status_code = redirect.value.status_code
        }
      }
      dynamic "fixed_response" {
        for_each = action.value.fixed_response[*]
        content {
          content_type = fixed_response.value.content_type
          message_body = fixed_response.value.message_body
          status_code = fixed_response.value.status_code
        }
      }
      dynamic "authenticate_cognito" {
        for_each = action.value.authenticate_cognito[*]
        content {
          authentication_request_extra_params = authenticate_cognito.value.authentication_request_extra_params
          on_unauthenticated_request = authenticate_cognito.value.on_unauthenticated_request
          scope = authenticate_cognito.value.scope
          session_cookie_name = authenticate_cognito.value.session_cookie_name
          session_timeout = authenticate_cognito.value.session_timeout
          user_pool_arn = authenticate_cognito.value.user_pool_arn
          user_pool_client_id = authenticate_cognito.value.user_pool_client_id
          user_pool_domain = authenticate_cognito.value.user_pool_domain
        }
      }
      dynamic "authenticate_oidc" {
        for_each = action.value.authenticate_oidc[*]
        content {
          authorization_endpoint = authenticate_oidc.value.authorization_endpoint
          client_id = authenticate_oidc.value.client_id
          on_unauthenticated_request = authenticate_oidc.value.on_unauthenticated_request
          scope = authenticate_oidc.value.scope
          session_cookie_name = authenticate_oidc.value.session_cookie_name
          authentication_request_extra_params = authenticate_oidc.value.authentication_request_extra_params
          issuer = authenticate_oidc.value.issuer
          session_timeout = authenticate_oidc.value.session_timeout
          token_endpoint = authenticate_oidc.value.token_endpoint
          user_info_endpoint = authenticate_oidc.value.user_info_endpoint
          client_secret = authenticate_oidc.value.client_secret
        }
      }
      type = action.value.type
      order = action.value.order
    }
  }
  {{- end }}
  {{- if $.Values.condition }}
  dynamic "condition" {
    for_each = var.values.condition[*]
    content {
      dynamic "http_header" {
        for_each = condition.value.http_header[*]
        content {
          http_header_name = http_header.value.http_header_name
          values = http_header.value.values
        }
      }
      dynamic "http_request_method" {
        for_each = condition.value.http_request_method[*]
        content {
          values = http_request_method.value.values
        }
      }
      dynamic "path_pattern" {
        for_each = condition.value.path_pattern[*]
        content {
          values = path_pattern.value.values
        }
      }
      dynamic "query_string" {
        for_each = condition.value.query_string[*]
        content {
          key = query_string.value.key
          value = query_string.value.value
        }
      }
      dynamic "source_ip" {
        for_each = condition.value.source_ip[*]
        content {
          values = source_ip.value.values
        }
      }
      dynamic "host_header" {
        for_each = condition.value.host_header[*]
        content {
          values = host_header.value.values
        }
      }
    }
  }
  {{- end }}
  {{- if $.Values.listener_arn }}
  listener_arn = var.values.listener_arn
  {{- end }}
  {{- if $.Values.tags }}
  tags = var.values.tags
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_lb_listener_rule.this.arn
}

output "listener_arn" {
    value = aws_lb_listener_rule.this.listener_arn
}

output "priority" {
    value = aws_lb_listener_rule.this.priority
}

