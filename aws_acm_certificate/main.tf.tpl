######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_acm_certificate
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

provider "aws" {
}

variable "values" {
  type = object({
    certificate_authority_arn = optional(string)
    certificate_body = optional(string)
    certificate_chain = optional(string)
    domain_name = optional(string)
    early_renewal_duration = optional(string)
    options = optional(list(object({
        certificate_transparency_logging_preference = optional(string)
    })))
    private_key = optional(string)
    subject_alternative_names = optional(set(string))
    tags = optional(map(string))
    validation_method = optional(string)
    validation_option = optional(set(object({
        domain_name = optional(string)
        validation_domain = optional(string)
    })))
  })
}

resource "aws_acm_certificate" "this" {

  {{- if $.Values.certificate_authority_arn }}
  certificate_authority_arn = var.values.certificate_authority_arn
  {{- end }}
  {{- if $.Values.certificate_body }}
  certificate_body = var.values.certificate_body
  {{- end }}
  {{- if $.Values.certificate_chain }}
  certificate_chain = var.values.certificate_chain
  {{- end }}
  {{- if $.Values.domain_name }}
  domain_name = var.values.domain_name
  {{- end }}
  {{- if $.Values.early_renewal_duration }}
  early_renewal_duration = var.values.early_renewal_duration
  {{- end }}
  {{- if $.Values.options }}
  options = var.values.options
  {{- end }}
  {{- if $.Values.private_key }}
  private_key = var.values.private_key
  {{- end }}
  {{- if $.Values.subject_alternative_names }}
  subject_alternative_names = var.values.subject_alternative_names
  {{- end }}
  {{- if $.Values.tags }}
  tags = var.values.tags
  {{- end }}
  {{- if $.Values.validation_method }}
  validation_method = var.values.validation_method
  {{- end }}
  {{- if $.Values.validation_option }}
  dynamic "validation_option" {
    for_each = var.values.validation_option
    content {
      domain_name = validation_option.domain_name
      validation_domain = validation_option.validation_domain
    }
  }
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_acm_certificate.this.arn
}

output "certificate_authority_arn" {
    value = aws_acm_certificate.this.certificate_authority_arn
}

output "domain_name" {
    value = aws_acm_certificate.this.domain_name
}

output "not_after" {
    value = aws_acm_certificate.this.not_after
}

output "not_before" {
    value = aws_acm_certificate.this.not_before
}

output "renewal_eligibility" {
    value = aws_acm_certificate.this.renewal_eligibility
}

output "status" {
    value = aws_acm_certificate.this.status
}

output "type" {
    value = aws_acm_certificate.this.type
}

output "validation_method" {
    value = aws_acm_certificate.this.validation_method
}

