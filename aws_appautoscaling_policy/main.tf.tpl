######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_appautoscaling_policy
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

provider "aws" {
}

variable "values" {
  type = any object({
    name = optional(string)
    policy_type = optional(string)
    resource_id = optional(string)
    scalable_dimension = optional(string)
    service_namespace = optional(string)
    step_scaling_policy_configuration = optional(list({
        adjustment_type = optional(string)
        cooldown = optional(number)
        metric_aggregation_type = optional(string)
        min_adjustment_magnitude = optional(number)
        step_adjustment = optional(set(any))
    }))
    target_tracking_scaling_policy_configuration = optional(list({
        disable_scale_in = optional(bool)
        predefined_metric_specification = optional(list({
            predefined_metric_type = optional(string)
            resource_label = optional(string)
        }))
        scale_in_cooldown = optional(number)
        scale_out_cooldown = optional(number)
        target_value = optional(number)
        customized_metric_specification = optional(list({
            unit = optional(string)
            dimensions = optional(set(any))
            metric_name = optional(string)
            namespace = optional(string)
            statistic = optional(string)
        }))
    }))
  })
}

resource "aws_appautoscaling_policy" "this" {

  {{- if $.Values.name }}
  name = var.values.name
  {{- end }}
  {{- if $.Values.policy_type }}
  policy_type = var.values.policy_type
  {{- end }}
  {{- if $.Values.resource_id }}
  resource_id = var.values.resource_id
  {{- end }}
  {{- if $.Values.scalable_dimension }}
  scalable_dimension = var.values.scalable_dimension
  {{- end }}
  {{- if $.Values.service_namespace }}
  service_namespace = var.values.service_namespace
  {{- end }}
  {{- if $.Values.step_scaling_policy_configuration }}
  step_scaling_policy_configuration = var.values.step_scaling_policy_configuration
  {{- end }}
  {{- if $.Values.target_tracking_scaling_policy_configuration }}
  target_tracking_scaling_policy_configuration = var.values.target_tracking_scaling_policy_configuration
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_appautoscaling_policy.this.arn
}

