######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_appautoscaling_policy
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

variable "values" {
  type = object({
    name = optional(string)
    policy_type = optional(string)
    resource_id = optional(string)
    scalable_dimension = optional(string)
    service_namespace = optional(string)
    step_scaling_policy_configuration = optional(list(object({
        step_adjustment = optional(set(object({
            metric_interval_lower_bound = optional(string)
            metric_interval_upper_bound = optional(string)
            scaling_adjustment = optional(number)
        })))
        adjustment_type = optional(string)
        cooldown = optional(number)
        metric_aggregation_type = optional(string)
        min_adjustment_magnitude = optional(number)
    })))
    target_tracking_scaling_policy_configuration = optional(list(object({
        customized_metric_specification = optional(list(object({
            metric_name = optional(string)
            namespace = optional(string)
            statistic = optional(string)
            unit = optional(string)
            dimensions = optional(set(object({
                name = optional(string)
                value = optional(string)
            })))
        })))
        disable_scale_in = optional(bool)
        predefined_metric_specification = optional(list(object({
            predefined_metric_type = optional(string)
            resource_label = optional(string)
        })))
        scale_in_cooldown = optional(number)
        scale_out_cooldown = optional(number)
        target_value = optional(number)
    })))
  })
}

resource "aws_appautoscaling_policy" "this" {

  {{- if $.Values.name }}
  name = var.values.name
  {{- end }}
  {{- if $.Values.policy_type }}
  policy_type = var.values.policy_type
  {{- end }}
  {{- if $.Values.resource_id }}
  resource_id = var.values.resource_id
  {{- end }}
  {{- if $.Values.scalable_dimension }}
  scalable_dimension = var.values.scalable_dimension
  {{- end }}
  {{- if $.Values.service_namespace }}
  service_namespace = var.values.service_namespace
  {{- end }}
  {{- if $.Values.step_scaling_policy_configuration }}
  dynamic "step_scaling_policy_configuration" {
    for_each = var.values.step_scaling_policy_configuration[*]
    content {
      metric_aggregation_type = step_scaling_policy_configuration.value.metric_aggregation_type
      min_adjustment_magnitude = step_scaling_policy_configuration.value.min_adjustment_magnitude
      dynamic "step_adjustment" {
        for_each = step_scaling_policy_configuration.value.step_adjustment[*]
        content {
          metric_interval_lower_bound = step_adjustment.value.metric_interval_lower_bound
          metric_interval_upper_bound = step_adjustment.value.metric_interval_upper_bound
          scaling_adjustment = step_adjustment.value.scaling_adjustment
        }
      }
      adjustment_type = step_scaling_policy_configuration.value.adjustment_type
      cooldown = step_scaling_policy_configuration.value.cooldown
    }
  }
  {{- end }}
  {{- if $.Values.target_tracking_scaling_policy_configuration }}
  dynamic "target_tracking_scaling_policy_configuration" {
    for_each = var.values.target_tracking_scaling_policy_configuration[*]
    content {
      dynamic "customized_metric_specification" {
        for_each = target_tracking_scaling_policy_configuration.value.customized_metric_specification[*]
        content {
          dynamic "dimensions" {
            for_each = customized_metric_specification.value.dimensions[*]
            content {
              name = dimensions.value.name
              value = dimensions.value.value
            }
          }
          metric_name = customized_metric_specification.value.metric_name
          namespace = customized_metric_specification.value.namespace
          statistic = customized_metric_specification.value.statistic
          unit = customized_metric_specification.value.unit
        }
      }
      disable_scale_in = target_tracking_scaling_policy_configuration.value.disable_scale_in
      dynamic "predefined_metric_specification" {
        for_each = target_tracking_scaling_policy_configuration.value.predefined_metric_specification[*]
        content {
          resource_label = predefined_metric_specification.value.resource_label
          predefined_metric_type = predefined_metric_specification.value.predefined_metric_type
        }
      }
      scale_in_cooldown = target_tracking_scaling_policy_configuration.value.scale_in_cooldown
      scale_out_cooldown = target_tracking_scaling_policy_configuration.value.scale_out_cooldown
      target_value = target_tracking_scaling_policy_configuration.value.target_value
    }
  }
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_appautoscaling_policy.this.arn
}

