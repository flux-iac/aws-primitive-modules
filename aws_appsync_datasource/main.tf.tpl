
######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_appsync_datasource
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.33.0"
    }
  }
}

provider "aws" {
}

variable "values" {
  type = object({
    api_id = optional(string)
    description = optional(string)
    dynamodb_config = optional(object({
        use_caller_credentials = optional(bool)
        versioned = optional(bool)
        delta_sync_config = optional(object({
            base_table_ttl = optional(number)
            delta_sync_table_name = optional(string)
            delta_sync_table_ttl = optional(number)
        }))
        region = optional(string)
        table_name = optional(string)
    }))
    elasticsearch_config = optional(object({
        region = optional(string)
        endpoint = optional(string)
    }))
    http_config = optional(object({
        endpoint = optional(string)
        authorization_config = optional(object({
            authorization_type = optional(string)
            aws_iam_config = optional(object({
                signing_service_name = optional(string)
                signing_region = optional(string)
            }))
        }))
    }))
    lambda_config = optional(object({
        function_arn = optional(string)
    }))
    name = optional(string)
    relational_database_config = optional(object({
        source_type = optional(string)
        http_endpoint_config = optional(object({
            db_cluster_identifier = optional(string)
            aws_secret_store_arn = optional(string)
            database_name = optional(string)
            region = optional(string)
            schema = optional(string)
        }))
    }))
    service_role_arn = optional(string)
    type = optional(string)
  })
}

resource "aws_appsync_datasource" "this" {
  api_id = var.values.api_id
  description = var.values.description
  dynamodb_config = var.values.dynamodb_config
  elasticsearch_config = var.values.elasticsearch_config
  http_config = var.values.http_config
  lambda_config = var.values.lambda_config
  name = var.values.name
  relational_database_config = var.values.relational_database_config
  service_role_arn = var.values.service_role_arn
  type = var.values.type
  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_appsync_datasource.this.arn
}

output "service_role_arn" {
    value = aws_appsync_datasource.this.service_role_arn
}

