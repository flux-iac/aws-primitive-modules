######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_appflow_flow
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

provider "aws" {
}

variable "values" {
  type = any object({
    description = optional(string)
    destination_flow_config = optional(set(any))
    kms_arn = optional(string)
    name = optional(string)
    source_flow_config = optional(list({
        api_version = optional(string)
        connector_profile_name = optional(string)
        connector_type = optional(string)
        incremental_pull_config = optional(list({
            datetime_type_field_name = optional(string)
        }))
        source_connector_properties = optional(list({
            datadog = optional(list({
                object = optional(string)
            }))
            marketo = optional(list({
                object = optional(string)
            }))
            veeva = optional(list({
                document_type = optional(string)
                include_all_versions = optional(bool)
                include_renditions = optional(bool)
                include_source_files = optional(bool)
                object = optional(string)
            }))
            zendesk = optional(list({
                object = optional(string)
            }))
            singular = optional(list({
                object = optional(string)
            }))
            custom_connector = optional(list({
                custom_properties = optional(map(string))
                entity_name = optional(string)
            }))
            dynatrace = optional(list({
                object = optional(string)
            }))
            google_analytics = optional(list({
                object = optional(string)
            }))
            salesforce = optional(list({
                enable_dynamic_field_update = optional(bool)
                include_deleted_records = optional(bool)
                object = optional(string)
            }))
            sapo_data = optional(list({
                object = optional(string)
            }))
            service_now = optional(list({
                object = optional(string)
            }))
            infor_nexus = optional(list({
                object = optional(string)
            }))
            trendmicro = optional(list({
                object = optional(string)
            }))
            amplitude = optional(list({
                object = optional(string)
            }))
            s3 = optional(list({
                bucket_name = optional(string)
                bucket_prefix = optional(string)
                s3_input_format_config = optional(list({
                    s3_input_file_type = optional(string)
                }))
            }))
            slack = optional(list({
                object = optional(string)
            }))
        }))
    }))
    tags = optional(map(string))
    task = optional(set(any))
    trigger_config = optional(list({
        trigger_properties = optional(list({
            scheduled = optional(list({
                timezone = optional(string)
                data_pull_mode = optional(string)
                first_execution_from = optional(string)
                schedule_end_time = optional(string)
                schedule_expression = optional(string)
                schedule_offset = optional(number)
                schedule_start_time = optional(string)
            }))
        }))
        trigger_type = optional(string)
    }))
  })
}

resource "aws_appflow_flow" "this" {

  {{- if $.Values.description }}
  description = var.values.description
  {{- end }}
  {{- if $.Values.destination_flow_config }}
  destination_flow_config = var.values.destination_flow_config
  {{- end }}
  {{- if $.Values.kms_arn }}
  kms_arn = var.values.kms_arn
  {{- end }}
  {{- if $.Values.name }}
  name = var.values.name
  {{- end }}
  {{- if $.Values.source_flow_config }}
  source_flow_config = var.values.source_flow_config
  {{- end }}
  {{- if $.Values.tags }}
  tags = var.values.tags
  {{- end }}
  {{- if $.Values.task }}
  task = var.values.task
  {{- end }}
  {{- if $.Values.trigger_config }}
  trigger_config = var.values.trigger_config
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_appflow_flow.this.arn
}

output "kms_arn" {
    value = aws_appflow_flow.this.kms_arn
}

