######################################################################
# Generated by Tofu-Jet. Please do not manually edit.
# AWS Primitive Module for TF-controller
# Resource: aws_ec2_fleet
######################################################################

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "4.38.0"
    }
  }
}

provider "aws" {
}

variable "values" {
  type = object({
    context = optional(string)
    excess_capacity_termination_policy = optional(string)
    launch_template_config = optional(list(object({
        launch_template_specification = optional(list(object({
            launch_template_name = optional(string)
            version = optional(string)
            launch_template_id = optional(string)
        })))
        override = optional(list(object({
            priority = optional(number)
            subnet_id = optional(string)
            weighted_capacity = optional(number)
            availability_zone = optional(string)
            instance_requirements = optional(list(object({
                burstable_performance = optional(string)
                network_interface_count = optional(list(object({
                    max = optional(number)
                    min = optional(number)
                })))
                accelerator_count = optional(list(object({
                    max = optional(number)
                    min = optional(number)
                })))
                cpu_manufacturers = optional(set(string))
                local_storage = optional(string)
                vcpu_count = optional(list(object({
                    max = optional(number)
                    min = optional(number)
                })))
                memory_gib_per_vcpu = optional(list(object({
                    max = optional(number)
                    min = optional(number)
                })))
                on_demand_max_price_percentage_over_lowest_price = optional(number)
                accelerator_manufacturers = optional(set(string))
                accelerator_names = optional(set(string))
                accelerator_total_memory_mib = optional(list(object({
                    max = optional(number)
                    min = optional(number)
                })))
                accelerator_types = optional(set(string))
                excluded_instance_types = optional(set(string))
                local_storage_types = optional(set(string))
                total_local_storage_gb = optional(list(object({
                    min = optional(number)
                    max = optional(number)
                })))
                bare_metal = optional(string)
                baseline_ebs_bandwidth_mbps = optional(list(object({
                    max = optional(number)
                    min = optional(number)
                })))
                instance_generations = optional(set(string))
                memory_mib = optional(list(object({
                    max = optional(number)
                    min = optional(number)
                })))
                require_hibernate_support = optional(bool)
                spot_max_price_percentage_over_lowest_price = optional(number)
            })))
            instance_type = optional(string)
            max_price = optional(string)
        })))
    })))
    on_demand_options = optional(list(object({
        allocation_strategy = optional(string)
    })))
    replace_unhealthy_instances = optional(bool)
    spot_options = optional(list(object({
        allocation_strategy = optional(string)
        instance_interruption_behavior = optional(string)
        instance_pools_to_use_count = optional(number)
        maintenance_strategies = optional(list(object({
            capacity_rebalance = optional(list(object({
                replacement_strategy = optional(string)
            })))
        })))
    })))
    tags = optional(map(string))
    target_capacity_specification = optional(list(object({
        default_target_capacity_type = optional(string)
        on_demand_target_capacity = optional(number)
        spot_target_capacity = optional(number)
        target_capacity_unit_type = optional(string)
        total_target_capacity = optional(number)
    })))
    terminate_instances = optional(bool)
    terminate_instances_with_expiration = optional(bool)
    type = optional(string)
  })
}

resource "aws_ec2_fleet" "this" {

  {{- if $.Values.context }}
  context = var.values.context
  {{- end }}
  {{- if $.Values.excess_capacity_termination_policy }}
  excess_capacity_termination_policy = var.values.excess_capacity_termination_policy
  {{- end }}
  {{- if $.Values.launch_template_config }}
  launch_template_config = var.values.launch_template_config
  {{- end }}
  {{- if $.Values.on_demand_options }}
  on_demand_options = var.values.on_demand_options
  {{- end }}
  {{- if $.Values.replace_unhealthy_instances }}
  replace_unhealthy_instances = var.values.replace_unhealthy_instances
  {{- end }}
  {{- if $.Values.spot_options }}
  spot_options = var.values.spot_options
  {{- end }}
  {{- if $.Values.tags }}
  tags = var.values.tags
  {{- end }}
  {{- if $.Values.target_capacity_specification }}
  target_capacity_specification = var.values.target_capacity_specification
  {{- end }}
  {{- if $.Values.terminate_instances }}
  terminate_instances = var.values.terminate_instances
  {{- end }}
  {{- if $.Values.terminate_instances_with_expiration }}
  terminate_instances_with_expiration = var.values.terminate_instances_with_expiration
  {{- end }}
  {{- if $.Values.type }}
  type = var.values.type
  {{- end }}


  {{- if $.Values.count }}
  count = {{ $.Values.count }}
  {{- end }}

  {{- if $.Values.lifecycle }}
  lifecycle {
    {{- if $.Values.lifecycle.create_before_destroy }}
    create_before_destroy = {{ $.Values.lifecycle.create_before_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    prevent_destroy = {{ $.Values.lifecycle.prevent_destroy }}
    {{- end }}
    {{- if $.Values.lifecycle.ignore_changes }}
    ignore_changes = {{ $.Values.lifecycle.ignore_changes }}
    {{- end }}
  }
  {{- end }}
}


output "arn" {
    value = aws_ec2_fleet.this.arn
}

